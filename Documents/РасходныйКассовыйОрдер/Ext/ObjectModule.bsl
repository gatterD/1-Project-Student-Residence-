
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОказаниеУслуги") Тогда
		// Заполнение шапки
		КонтактноеЛицо = ДанныеЗаполнения.Клиент;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВыплатаЗарплат") Тогда
		// Заполнение шапки
		КонтактноеЛицо = ДанныеЗаполнения.СотрудникЗаполняющийДокумент;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПокупкаИнвентаря") Тогда
		// Заполнение шапки
		КонтактноеЛицо = ДанныеЗаполнения.Клиент;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
    Движения.Бюджет.Записывать = Истина;
		ОстаткиСуммы = РегистрыНакопления.Бюджет;
	// Создаем вспомогательные переменные 
			//  Формируем таблицу остатков и записываем остаточное количество товара на складе
	    ТаблицаОстатков = ОстаткиСуммы.Остатки(МоментВремени(),,,"Сумма");
		Сумма = ТаблицаОстатков.Итог("Сумма");
	Если Сумма > СуммаДокумента Тогда
		Движение = Движения.Бюджет.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	Движение.Период = Дата;
	Движение.Сумма = СуммаДокумента;
	Движение.КонтактноеЛицо = КонтактноеЛицо;
	Иначе
		Сообщить("Недостаточно денег! Всего денег в бюджете: "+ Сумма + " Документ не проводится!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	// регистр Управленческий 
	Движения.Управленческий.Записывать = Истина;
	Движение = Движения.Управленческий.Добавить();
	Движение.СчетДт = ПланыСчетов.Основной.РасчетыСПоставщиками;
	Движение.СчетКт = ПланыСчетов.Основной.Касса;
	Движение.Период = Дата;
	Движение.Сумма = СуммаДокумента;
	Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Общежитие] = КонтактноеЛицо;

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры
