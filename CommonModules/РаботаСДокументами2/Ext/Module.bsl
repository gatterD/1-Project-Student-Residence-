Процедура РассчитатьНачисления(НаборЗаписейРегистра, ТребуемыйВидРасчета,СписокСотрудников) Экспорт 
	Регистратор	= НаборЗаписейРегистра.Отбор.Регистратор.Значение;
	Если ТребуемыйВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.Больничный Тогда
		Запрос1 = Новый Запрос;
		Запрос1.Текст = 
		"ВЫБРАТЬ 
		|	КомпенсацияДляБольничного.Период КАК Период,
		|	КомпенсацияДляБольничного.Сотрудник КАК Сотрудник,
		|	СУММА(КомпенсацияДляБольничного.Значение) КАК Значение
		|ИЗ
		|	РегистрСведений.КомпенсацияДляБольничного КАК КомпенсацияДляБольничного
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.Начисления.ДанныеГрафика КАК НачисленияДанныеГрафика
		|		ПО (КомпенсацияДляБольничного.Сотрудник = НачисленияДанныеГрафика.Сотрудник)
		|ГДЕ
		|	КомпенсацияДляБольничного.Период МЕЖДУ НачисленияДанныеГрафика.БазовыйПериодНачало И НачисленияДанныеГрафика.БазовыйПериодКонец
		|	И
        |   	НачисленияДанныеГрафика.ВидРасчета = &ЗначениеСсылка
		|СГРУППИРОВАТЬ ПО
		|	КомпенсацияДляБольничного.Сотрудник,
		|	КомпенсацияДляБольничного.Период";
		Запрос1.УстановитьПараметр("ЗначениеСсылка",ТребуемыйВидРасчета);
		ВыборкаРезультата1 = Запрос1.Выполнить().Выбрать();
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		 "ВЫБРАТЬ
		 |	НачисленияДанныеГрафика.ЗначениеПериодДействия КАК Норма,
		 |	НачисленияДанныеГрафика.ЗначениеФактическийПериодДействия КАК Факт,
		 |	НачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки
		 |ИЗ
		 |	РегистрРасчета.Начисления.ДанныеГрафика(Регистратор = &Регистратор
		 |											И ВидРасчета = &ВидРасчета
		 |											И Сотрудник В (&СписокСотрудников))
		 |КАК НачисленияДанныеГрафика";
		
		Запрос.УстановитьПараметр("Регистратор",НаборЗаписейРегистра.Отбор.Регистратор.Значение);
		Запрос.УстановитьПараметр("ВидРасчета", ТребуемыйВидРасчета);
		Запрос.УстановитьПараметр("СписокСотрудников", СписокСотрудников);
		ВыборкаРезультата = Запрос.Выполнить().Выбрать();
		ЗначениеСуммы = 0;
		Пока  ВыборкаРезультата1.Следующий() Цикл
			ЗначениеСуммы = ВыборкаРезультата1.Значение + ЗначениеСуммы;
		КонецЦикла;
		Для каждого ЗаписьРегистра Из НаборЗаписейРегистра Цикл
			 СтруктураНомер = Новый Структура("НомерСтроки");
			 СтруктураНомер.НомерСтроки = ЗаписьРегистра.НомерСтроки;
			 ВыборкаРезультата.Сбросить();
		 Если ВыборкаРезультата.НайтиСледующий(СтруктураНомер) Тогда
			 Если ВыборкаРезультата.Норма = 0 Тогда
				 Сообщить("Вид расчета: Больничный - Нет выделенных дней в заданом периоде", );
				 ЗаписьРегистра.Результат = 0;
			 Иначе 
				 ЗаписьРегистра.Результат = ЗаписьРегистра.ИсходныеДанные * (ЗначениеСуммы);
				 Сообщить("Выполнен расчет " + ЗаписьРегистра.Регистратор + " - "
				 + ЗаписьРегистра.ВидРасчета + " - "+ ЗаписьРегистра.Сотрудник, );
			 КонецЕсли;
		 КонецЕсли;
	КонецЦикла;
	ИначеЕсли ТребуемыйВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.Оклад Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		  "ВЫБРАТЬ
		 |	НачисленияДанныеГрафика.ЗначениеПериодДействия КАК Норма,
		 |	НачисленияДанныеГрафика.ЗначениеФактическийПериодДействия КАК Факт,
		 |	НачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки
		 |ИЗ
		 |	РегистрРасчета.Начисления.ДанныеГрафика(Регистратор = &Регистратор
		 |											И ВидРасчета = &ВидРасчета
		 |											И Сотрудник В (&СписокСотрудников))
		 |КАК НачисленияДанныеГрафика";
		Запрос.УстановитьПараметр("Регистратор",НаборЗаписейРегистра.Отбор.Регистратор.Значение);
		Запрос.УстановитьПараметр("ВидРасчета", ТребуемыйВидРасчета);
		Запрос.УстановитьПараметр("СписокСотрудников", СписокСотрудников);
		
		ВыборкаРезультата = Запрос.Выполнить().Выбрать();
		
		Для каждого ЗаписьРегистра Из НаборЗаписейРегистра Цикл
			 СтруктураНомер = Новый Структура("НомерСтроки");
			 СтруктураНомер.НомерСтроки = ЗаписьРегистра.НомерСтроки;
			 ВыборкаРезультата.Сбросить();
			 Если ВыборкаРезультата.НайтиСледующий(СтруктураНомер) Тогда
			 Если ВыборкаРезультата.Норма = 0 Тогда
				 Сообщить("Вид расчета: Оклад - Нет рабочих дней в заданом периоде", );
				 ЗаписьРегистра.Результат = 0;
			 Иначе 
				 ЗаписьРегистра.Результат = (ЗаписьРегистра.ИсходныеДанные / ВыборкаРезультата.Норма) * ВыборкаРезультата.Факт;
				 Сообщить("Выполнен расчет " + ЗаписьРегистра.Регистратор + " - "
				 + ЗаписьРегистра.ВидРасчета + " - "+ ЗаписьРегистра.Сотрудник, );
			 КонецЕсли;
		 КонецЕсли;
		 КонецЦикла;
		ИначеЕсли ТребуемыйВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.Премия Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = 
			 "ВЫБРАТЬ
			 |	НачисленияБазаНачисления.НомерСтроки КАК НомерСтроки,
			 |	НачисленияБазаНачисления.РезультатБаза КАК База
			 |ИЗ
			 |	РегистрРасчета.Начисления.БазаНачисления(&ИзмеренияОсновного,&ИзмеренияБазового,,
			 |	Регистратор = &Регистратор
			 |	И ВидРасчета = &ВидРасчета И Сотрудник В (&СписокСотрудников))
			 |КАК НачисленияБазаНачисления";
			
			Измер = Новый Массив(1);
			Измер[0] = "Сотрудник";
			
			Запрос.УстановитьПараметр("ИзмеренияОсновного",Измер);
			Запрос.УстановитьПараметр("ИзмеренияБазового",Измер);
			Запрос.УстановитьПараметр("Регистратор",Регистратор);
			Запрос.УстановитьПараметр("ВидРасчета",ТребуемыйВидРасчета);
			Запрос.УстановитьПараметр("СписокСотрудников",СписокСотрудников);
			
			ВыборкаРезультата = Запрос.Выполнить().Выбрать();
			Для каждого Записьрегистра ИЗ НаборЗаписейРегистра Цикл
				СтруктураНомер = Новый Структура("НомерСтроки");
				СтруктураНомер.НомерСтроки = ЗаписьРегистра.НомерСтроки;
				ВыборкаРезультата.Сбросить();
				Если ВыборкаРезультата.НайтиСледующий(СтруктураНомер) Тогда
					ЗаписьРегистра.Результат = ВыборкаРезультата.База * (10/100);
					Сообщить("Выполнен расчет "+ ЗаписьРегистра.Регистратор + " - " + 
					ЗаписьРегистра.ВидРасчета + " - " + ЗаписьРегистра.Сотрудник, );
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;	
КонецПроцедуры
